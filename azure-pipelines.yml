# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  web: '**/WebAppPipeline/WebAppPipeline.csproj'
  lib: '**/Lib/Lib.csproj'
  unittests: '**/UnitTesting/UnitTesting.csproj'
  functionaltests: '**/FunctionalTesting/FunctionalTesting.csproj'
  integrationtest: '**/IntegrationTesting/IntegrationTesting.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azuresubscrition: 'DevOpsWebApp'
  appName: 'devops1'
  containerregistryName: ''
  artifactName: 'WebAppRelease'

steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(lib)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(lib)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(unittests)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(web)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(web)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(functionaltests)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(integrationtest)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(artifactName)'

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azuresubscrition)'
    appType: 'webApp'
    appName: '$(appName)'
    package: '$(System.ArtifactsDirectory)/**/*.zip'
    runtimeStack: 'DOTNETCORE|6.0'