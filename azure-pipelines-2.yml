# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.csproj' # Ou o caminho específico para o seu projeto
- task: DotNetCoreCLI@2
  displayName: 'Run Tests with Code Coverage'
  inputs:
    command: 'test'
    projects: '**/*.csproj' # Altere para o caminho do seu projeto de testes
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
    # 'opencover' é um formato de XML que ReportGenerator pode ler facilmente.
- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator Global Tool'
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install -g dotnet-reportgenerator-globaltool --version 5.2.4' # Use a versão mais recente e estável

- script: |
    # Gere o relatório HTML a partir do XML da cobertura
    # -reports: o ficheiro XML gerado por Coverlet
    # -targetdir: o diretório onde o HTML será gerado
    # -reporttypes: o formato do relatório (Html para o separador de cobertura no ADO)
    reportgenerator -reports:"$(Build.SourcesDirectory)/coverage/coverage.opencover.xml" "-targetdir:$(Build.SourcesDirectory)/html_coverage_report" -reporttypes:Html
  displayName: 'Generate HTML Coverage Report'

- task: PublishCodeCoverageResults@2
  displayName: 'Publish Code Coverage Results to Azure DevOps'
  inputs:
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    # Opcional: Define se a pipeline falha se a cobertura estiver vazia
    # failIfCoverageEmpty: true
    # Opcional: Caminho para a pasta onde os ficheiros de fonte estão (normalmente o root do repositório)
    # pathToSources: '$(Build.SourcesDirectory)'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
