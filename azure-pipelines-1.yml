
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  web: '**/WebAppPipeline/WebAppPipeline.csproj'
  lib: '**/Lib/Lib.csproj'
  unittests: '**/UnitTesting/UnitTesting.csproj'
  functionaltests: '**/FunctionalTesting/FunctionalTesting.csproj'
  integrationtests: '**/IntegrationTesting/IntegrationTesting.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscription: 'WebAppAzurePipelineConnection'
  appName: 'webpipeline'


steps:
- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(lib)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(unittest)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(web)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(functionaltests)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(integrationtests)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'WebAppPipeline'
- task: AzureWebApp@1
  inputs:
    azureSubscription: $(azureSubscription)
    appType: 'webAppLinux'
    appName: $(appName)
    package: '$(System.ArtifactsDirectory)/**/*.zip'
    runtimeStack: 'DOTNETCORE|6.0'
